@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@using System.Linq
@model Twitter_Interoperability_project.Models.XsdValidationViewModel
@{
    ViewData["Title"] = "XSD Validator";
}
<style>
    .validator-container {
        padding: 15px;
        background: #e5e5e5;
        border-radius: 4px;
    }

    .validator-label {
        font-size: 1.2em;
        margin-bottom: 5px;
        font-weight: bold;
    }

    .validator-textarea {
        width: 100%;
        height: 150px;
        font-family: Consolas, monospace;
        font-size: 1em;
        margin-bottom: 15px;
        resize: vertical;
    }

    .validator-section {
        margin-bottom: 10px;
        background: #ddd;
        padding: 10px;
        border-radius: 3px;
    }

    .validator-result {
        margin-top: 15px;
        padding: 10px;
        background: #fff;
        border: 1px solid #ccc;
        border-radius: 3px;
    }

    .btn-secondary {
        color: white;
        background-color: darkgreen;
        border: none;
    }
</style>

<div class="validator-container">
    <form method="post" asp-controller="Xsd" asp-action="Index">
        <div class="validator-section">
            <label class="validator-label" for="xmlData">XML data to validate</label>
            <textarea id="xmlData" name="XmlData" class="validator-textarea">@Model.XmlData</textarea>
        </div>
        <button type="submit" class="btn btn-primary" style="float:right;">Validate</button>
        <button type="submit" name="submit" value="Sample" class="btn btn-secondary">Load Sample XML</button>
        <div style="clear:both;"></div>
    </form>

    <div class="validator-section">
        <label class="validator-label" for="xsdData">Current XML Schema (XSD)</label>
        <textarea id="xsdData" class="validator-textarea" readonly>@Model.XsdData</textarea>
    </div>

    @if (!string.IsNullOrEmpty(Model.Result))
    {
        <div class="validator-result">
            @Html.Raw(Model.Result)
        </div>
    }

   
    @if (Model.JobPostings == null || !Model.JobPostings.Any())
    {
        <p>No job postings found.</p>
    }
    else
    {
        <h3>Saved Job Postings:</h3>
        <ul>
            @foreach (var job in Model.JobPostings)
            {
                <li>
                    <b>@job.Title</b> (@job.Id) - @job.CompanyName<br />
                    <small>@job.Location </small>
                </li>
            }
        </ul>
    }

</div>